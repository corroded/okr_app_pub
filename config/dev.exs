use Mix.Config

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with brunch.io to recompile .js and .css sources.
config :okr_app, OkrAppWeb.Endpoint,
  http: [port: 6006],
  debug_errors: true,
  code_reloader: true,
  check_origin: false,
  watchers: [npm: ["run", "watch", cd: Path.expand("../assets", __DIR__)]]

config :okr_app, OkrApp.Mailer,
  adapter: Bamboo.LocalAdapter

config :samly, Samly.Provider,
  idp_id_from: :path_segment,
  service_providers: [
    %{
      id: "okta-sp",
      entity_id: "http://www.okta.com/exkfwa8zygLeSLHtA0h7"
    }
  ],
  identity_providers: [
    %{
      id: "okta",
      sp_id: "okta-sp",
      base_url: "https://okrs.devsalesloft.com:6007/sso",
      metadata_file: "priv/idp/okta_metadata.dev.xml",
      pre_session_create_pipeline: OkrAppWeb.SamlyPipeline,
      allow_idp_initiated_flow: true,
      sign_requests: false,
      sign_metadata: false,
      signed_assertion_in_resp: false,
      signed_envelopes_in_resp: false
    }
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# command from your terminal:
#
#     openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com" -keyout priv/server.key -out priv/server.pem
#
# The `http:` config above can be replaced with:
#
#     https: [port: 4000, keyfile: "priv/server.key", certfile: "priv/server.pem"],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :okr_app, OkrAppWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r{priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$},
      ~r{priv/gettext/.*(po)$},
      ~r{lib/okr_app_web/views/.*(ex)$},
      ~r{lib/okr_app_web/templates/.*(eex)$}
    ]
  ]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n", level: :info

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Configure your database
config :okr_app, OkrApp.Repo,
  username: "postgres",
  password: "postgres",
  database: "okr_app_dev",
  hostname: "localhost",
  pool_size: 10

config :statix,
  prefix: "okr_app.#{Mix.env()}",
  host: "localhost",
  port: String.to_integer(System.get_env("STATSD_PORT") || "8125")
